{
  "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiveUSDAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_sendHomesTokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "option",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "createdAt",
          "type": "uint256"
        }
      ],
      "name": "CreateDAO",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_buyToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_option",
          "type": "uint256"
        }
      ],
      "name": "createDAO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "isExistName",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isOwnDao",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "option1",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "option2",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "option3",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "profiles",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "option",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "createdAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "buyToken",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "profilesById",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "option",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "createdAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "buyToken",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "profilesLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "receiveUSDAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sendHomesTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_option",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "updateOption",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiveUSDAddress",
          "type": "address"
        }
      ],
      "name": "updateReceiveUSDAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sendHomesTokenAddress",
          "type": "address"
        }
      ],
      "name": "updateSentHomesTokenAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x6e7e6ad95fd6db3fdbd973bd407c922459ec4ec38539fee5a064159275b503ee",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
    "transactionIndex": 0,
    "gasUsed": "1200455",
    "logsBloom": "0x
    "blockHash": "0x37fbe71db0a2bfa72ed976e5272eb58e7001a241b20c4e025fd19132fb42b120",
    "transactionHash": "0x6e7e6ad95fd6db3fdbd973bd407c922459ec4ec38539fee5a064159275b503ee",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 3,
        "transactionHash": "0x6e7e6ad95fd6db3fdbd973bd407c922459ec4ec38539fee5a064159275b503ee",
        "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x37fbe71db0a2bfa72ed976e5272eb58e7001a241b20c4e025fd19132fb42b120"
      }
    ],
    "blockNumber": 3,
    "cumulativeGasUsed": "1200455",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266"
  ],
  "numDeployments": 1,
  "solcInputHash": "2db831961d2eca354ff43e4cdbe66060",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiveUSDAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_sendHomesTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"option\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"name\":\"CreateDAO\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_buyToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_option\",\"type\":\"uint256\"}],\"name\":\"createDAO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"isExistName\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isOwnDao\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"option1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"option2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"option3\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"profiles\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"option\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"profilesById\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"option\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"profilesLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiveUSDAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sendHomesTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_option\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"updateOption\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiveUSDAddress\",\"type\":\"address\"}],\"name\":\"updateReceiveUSDAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sendHomesTokenAddress\",\"type\":\"address\"}],\"name\":\"updateSentHomesTokenAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AIHomesDAO.sol\":\"AIHomesDAO\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AIHomesDAO.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n/**\\n *Submitted for verification at BscScan.com on 2023-05-24\\n*/\\n\\n// File: @openzeppelin/contracts/utils/Context.sol\\n\\n\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\\n// File: @openzeppelin/contracts/access/Ownable.sol\\n\\n\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\\n// File: @openzeppelin/contracts/security/Pausable.sol\\n\\n\\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\\n// File: contracts/CreateDao.sol\\n\\n\\npragma solidity ^0.8.9;\\n\\n\\n\\n\\npragma solidity >=0.6.0 <0.9.0;\\n\\ninterface IBEP20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the token decimals.\\n     */\\n    function decimals() external view returns (uint8);\\n\\n    /**\\n     * @dev Returns the token symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the bep token owner.\\n     */\\n    function getOwner() external view returns (address);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(\\n        address _owner,\\n        address spender\\n    ) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    function lockAddress(address account, uint256 amount) external;\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n}\\n// File: contracts/LotteryOwnable.sol\\n\\n\\ncontract AIHomesDAO is Pausable, Ownable {\\n    struct DA0Info {\\n        uint256 id;\\n        string name;\\n        address owner;\\n        uint256 option;\\n        uint256 createdAt;\\n        uint256 amount;\\n        address buyToken;\\n    }\\n\\n    address constant BUSD = 0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512;\\n    address constant USDT = 0x250b0Ae6Ec23805508E31714e3578b8B4Cbe5A3e;\\n    address constant AIHomesToken = 0x5FbDB2315678afecb367f032d93F642f64180aa3;\\n\\n    address public receiveUSDAddress;\\n    address public sendHomesTokenAddress;\\n\\n    uint256 public option1 = 5000 ether; // 5000 usd\\n    uint256 public option2 = 10000 ether; // 10000 usd\\n    uint256 public option3 = 15000 ether; // 15000 usd\\n\\n    uint256 public profilesLength = 0;\\n    mapping(address => bool) public isOwnDao;\\n    mapping(address => DA0Info) public profiles;\\n    mapping(uint256 => DA0Info) public profilesById;\\n    mapping(string => bool) public isExistName;\\n\\n    event CreateDAO(address owner,uint256 id, uint256 option, string name, uint256 amount, address buyToken, uint256 createdAt);\\n\\n    constructor(address _receiveUSDAddress, address _sendHomesTokenAddress) {\\n        receiveUSDAddress = _receiveUSDAddress;\\n        sendHomesTokenAddress = _sendHomesTokenAddress;\\n    }\\n\\n    function pause() public onlyOwner {\\n        _pause();\\n    }\\n\\n    function unpause() public onlyOwner {\\n        _unpause();\\n    }\\n\\n    function updateReceiveUSDAddress(address _receiveUSDAddress) public onlyOwner {\\n        require(_receiveUSDAddress != address(0), \\\"Can not set address 0\\\");\\n        receiveUSDAddress = _receiveUSDAddress;\\n    }\\n\\n    function updateSentHomesTokenAddress(address _sendHomesTokenAddress) public onlyOwner {\\n        require(_sendHomesTokenAddress != address(0), \\\"Can not set address 0\\\");\\n        sendHomesTokenAddress = _sendHomesTokenAddress;\\n    }\\n\\n    function updateOption(uint256 _option, uint256 _amount) public onlyOwner {\\n        require(_option > 0 && _option < 4, \\\"Invalid option\\\");\\n        if (_option == 1) option1 = _amount;\\n        if (_option == 2) option2 = _amount;\\n        if (_option == 3) option3 = _amount;\\n    }\\n\\n    function createDAO(string memory _name, address _buyToken, uint256 _option) whenNotPaused public {\\n        require(_option > 0 && _option < 4, \\\"Invalid option\\\");\\n        require(_buyToken == BUSD || _buyToken == USDT, \\\"Invalid buy token\\\");\\n        require(bytes(_name).length > 0, \\\"Invalid name\\\");\\n        require(isOwnDao[msg.sender] == false, \\\"Address already has DAO\\\");\\n        require(isExistName[_name] == false, \\\"Name already exist\\\");\\n\\n        // Amount send, receive token\\n        uint256 amount = 0;\\n        if (_option == 1) amount = option1;\\n        if (_option == 2) amount = option2;\\n        if (_option == 3) amount = option3;\\n        // Do transfer token\\n        transferToken(msg.sender, _buyToken, amount);\\n        IBEP20(AIHomesToken).lockAddress(msg.sender, amount);\\n\\n        // Create new profile\\n        DA0Info memory info;\\n        info.owner = msg.sender;\\n        info.option = _option;\\n        info.name = _name;\\n        info.createdAt = block.timestamp;\\n        info.amount = amount;\\n        info.buyToken = _buyToken;\\n\\n        // Increase profile ID\\n        profilesLength++;\\n        info.id = profilesLength;\\n\\n        // Add to list\\n        profiles[msg.sender] = info;\\n        profilesById[info.id] = info;\\n\\n        // Update address created DAO\\n        isOwnDao[msg.sender] = true;\\n        isExistName[_name] = true;\\n\\n        emit CreateDAO(msg.sender, info.id, _option, _name, amount, _buyToken, block.timestamp);\\n    }\\n\\n    function transferToken(address _sender, address _buyToken, uint256 amount) private {\\n        IBEP20(_buyToken).transferFrom(_sender, receiveUSDAddress, amount);\\n        IBEP20(AIHomesToken).transferFrom(sendHomesTokenAddress, _sender, amount);\\n    }\\n\\n}\\n\",\"keccak256\":\"0xe2bf87e9a83c62c749138da2a8d8a40203ea0634fa8e779672e11be09810821a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405269010f0cf064dd5920000060035569021e19e0c9bab240000060045569032d26d12e980b600000600555600060065534801561003f57600080fd5b5060405161138338038061138383398101604081905261005e91610117565b6000805460ff19169055610071336100a2565b600180546001600160a01b039384166001600160a01b0319918216179091556002805492909316911617905561014a565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b80516001600160a01b038116811461011257600080fd5b919050565b6000806040838503121561012a57600080fd5b610133836100fb565b9150610141602084016100fb565b90509250929050565b61122a806101596000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806385b57829116100ad578063ad69ab9511610071578063ad69ab9514610257578063bbe1562714610260578063cfdd3d8e14610286578063d70980cf146102b4578063f2fde38b146102c757600080fd5b806385b57829146102055780638da5cb5b1461021857806392d2e4381461022e578063949df97a146102455780639f47ceff1461024e57600080fd5b806361707aac116100f457806361707aac146101bc578063715018a6146101cf578063785808b0146101d757806381c48bfc146101ea5780638456cb59146101fd57600080fd5b80633db93e15146101315780633f4ba83a146101615780633ff7a7e81461016b5780634b5c2db61461017e5780635c975abb146101b1575b600080fd5b600154610144906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101696102da565b005b610169610179366004610dc2565b6102ec565b6101a161018c366004610dc2565b60076020526000908152604090205460ff1681565b6040519015158152602001610158565b60005460ff166101a1565b6101696101ca366004610dc2565b610369565b6101696103e1565b600254610144906001600160a01b031681565b6101696101f8366004610e87565b6103f3565b6101696108b9565b610169610213366004610ede565b6108c9565b60005461010090046001600160a01b0316610144565b61023760035481565b604051908152602001610158565b61023760055481565b61023760065481565b61023760045481565b61027361026e366004610dc2565b61094c565b6040516101589796959493929190610f50565b6101a1610294366004610fa4565b8051602081830181018051600a8252928201919093012091525460ff1681565b6102736102c2366004610fe1565b610a1d565b6101696102d5366004610dc2565b610a3f565b6102e2610ab8565b6102ea610b18565b565b6102f4610ab8565b6001600160a01b0381166103475760405162461bcd60e51b8152602060048201526015602482015274043616e206e6f74207365742061646472657373203605c1b60448201526064015b60405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b610371610ab8565b6001600160a01b0381166103bf5760405162461bcd60e51b8152602060048201526015602482015274043616e206e6f74207365742061646472657373203605c1b604482015260640161033e565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6103e9610ab8565b6102ea6000610b6a565b6103fb610bc3565b60008111801561040b5750600481105b6104485760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b21037b83a34b7b760911b604482015260640161033e565b6001600160a01b03821673e7f1725e7734ce288f8367e1bb143e90bb3f0512148061048f57506001600160a01b03821673250b0ae6ec23805508e31714e3578b8b4cbe5a3e145b6104cf5760405162461bcd60e51b815260206004820152601160248201527024b73b30b634b210313abc903a37b5b2b760791b604482015260640161033e565b600083511161050f5760405162461bcd60e51b815260206004820152600c60248201526b496e76616c6964206e616d6560a01b604482015260640161033e565b3360009081526007602052604090205460ff161561056f5760405162461bcd60e51b815260206004820152601760248201527f4164647265737320616c7265616479206861732044414f000000000000000000604482015260640161033e565b600a8360405161057f9190610ffa565b9081526040519081900360200190205460ff16156105d45760405162461bcd60e51b815260206004820152601260248201527113985b5948185b1c9958591e48195e1a5cdd60721b604482015260640161033e565b6000816001036105e357506003545b816002036105f057506004545b816003036105fd57506005545b610608338483610c09565b604051630cca2f4960e21b815233600482015260248101829052735fbdb2315678afecb367f032d93f642f64180aa390633328bd2490604401600060405180830381600087803b15801561065b57600080fd5b505af115801561066f573d6000803e3d6000fd5b505050506106c56040518060e00160405280600081526020016060815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160006001600160a01b031681525090565b336040820152606081018390526020810185905242608082015260a081018290526001600160a01b03841660c08201526006805490600061070583611016565b909155505060065481523360009081526008602090815260409091208251815590820151829190600182019061073b90826110c6565b506040828101516002830180546001600160a01b03199081166001600160a01b0393841617909155606085015160038501556080850151600485015560a0850151600585015560c090940151600690930180549094169216919091179091558151600090815260096020908152919020825181559082015182919060018201906107c590826110c6565b506040828101516002830180546001600160a01b03199081166001600160a01b0393841617909155606085015160038501556080850151600485015560a0850151600585015560c090940151600690930180549094169216919091179091553360009081526007602052819020805460ff191660019081179091559051600a90610850908890610ffa565b908152604051908190036020018120805492151560ff199093169290921790915581517fa31da5bc5ab26bcd803801229e6f71ef382a247f7fafb69420b9035335486e9f916108aa91339187908a9088908b904290611186565b60405180910390a15050505050565b6108c1610ab8565b6102ea610d20565b6108d1610ab8565b6000821180156108e15750600482105b61091e5760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b21037b83a34b7b760911b604482015260640161033e565b8160010361092c5760038190555b8160020361093a5760048190555b816003036109485760058190555b5050565b6008602052600090815260409020805460018201805491929161096e9061103d565b80601f016020809104026020016040519081016040528092919081815260200182805461099a9061103d565b80156109e75780601f106109bc576101008083540402835291602001916109e7565b820191906000526020600020905b8154815290600101906020018083116109ca57829003601f168201915b505050600284015460038501546004860154600587015460069097015495966001600160a01b0393841696929550909350911687565b6009602052600090815260409020805460018201805491929161096e9061103d565b610a47610ab8565b6001600160a01b038116610aac5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161033e565b610ab581610b6a565b50565b6000546001600160a01b036101009091041633146102ea5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161033e565b610b20610d5d565b6000805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b60005460ff16156102ea5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161033e565b6001546040516323b872dd60e01b81526001600160a01b038581166004830152918216602482015260448101839052908316906323b872dd906064016020604051808303816000875af1158015610c64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8891906111d2565b506002546040516323b872dd60e01b81526001600160a01b039182166004820152908416602482015260448101829052735fbdb2315678afecb367f032d93f642f64180aa3906323b872dd906064016020604051808303816000875af1158015610cf6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1a91906111d2565b50505050565b610d28610bc3565b6000805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610b4d3390565b60005460ff166102ea5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161033e565b80356001600160a01b0381168114610dbd57600080fd5b919050565b600060208284031215610dd457600080fd5b610ddd82610da6565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610e0b57600080fd5b813567ffffffffffffffff80821115610e2657610e26610de4565b604051601f8301601f19908116603f01168101908282118183101715610e4e57610e4e610de4565b81604052838152866020858801011115610e6757600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215610e9c57600080fd5b833567ffffffffffffffff811115610eb357600080fd5b610ebf86828701610dfa565b935050610ece60208501610da6565b9150604084013590509250925092565b60008060408385031215610ef157600080fd5b50508035926020909101359150565b60005b83811015610f1b578181015183820152602001610f03565b50506000910152565b60008151808452610f3c816020860160208601610f00565b601f01601f19169290920160200192915050565b87815260e060208201526000610f6960e0830189610f24565b6001600160a01b039788166040840152606083019690965250608081019390935260a083019190915290921660c09092019190915292915050565b600060208284031215610fb657600080fd5b813567ffffffffffffffff811115610fcd57600080fd5b610fd984828501610dfa565b949350505050565b600060208284031215610ff357600080fd5b5035919050565b6000825161100c818460208701610f00565b9190910192915050565b60006001820161103657634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c9082168061105157607f821691505b60208210810361107157634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156110c157600081815260208120601f850160051c8101602086101561109e5750805b601f850160051c820191505b818110156110bd578281556001016110aa565b5050505b505050565b815167ffffffffffffffff8111156110e0576110e0610de4565b6110f4816110ee845461103d565b84611077565b602080601f83116001811461112957600084156111115750858301515b600019600386901b1c1916600185901b1785556110bd565b600085815260208120601f198616915b8281101561115857888601518255948401946001909101908401611139565b50858210156111765787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060018060a01b03808a16835288602084015287604084015260e060608401526111b460e0840188610f24565b60808401969096529390931660a082015260c0015250949350505050565b6000602082840312156111e457600080fd5b81518015158114610ddd57600080fdfea264697066735822122057f4eb6e8619c230ae562190a854177d5500c56f118602b3fd7cc90e810b2fa964736f6c63430008120033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061012c5760003560e01c806385b57829116100ad578063ad69ab9511610071578063ad69ab9514610257578063bbe1562714610260578063cfdd3d8e14610286578063d70980cf146102b4578063f2fde38b146102c757600080fd5b806385b57829146102055780638da5cb5b1461021857806392d2e4381461022e578063949df97a146102455780639f47ceff1461024e57600080fd5b806361707aac116100f457806361707aac146101bc578063715018a6146101cf578063785808b0146101d757806381c48bfc146101ea5780638456cb59146101fd57600080fd5b80633db93e15146101315780633f4ba83a146101615780633ff7a7e81461016b5780634b5c2db61461017e5780635c975abb146101b1575b600080fd5b600154610144906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101696102da565b005b610169610179366004610dc2565b6102ec565b6101a161018c366004610dc2565b60076020526000908152604090205460ff1681565b6040519015158152602001610158565b60005460ff166101a1565b6101696101ca366004610dc2565b610369565b6101696103e1565b600254610144906001600160a01b031681565b6101696101f8366004610e87565b6103f3565b6101696108b9565b610169610213366004610ede565b6108c9565b60005461010090046001600160a01b0316610144565b61023760035481565b604051908152602001610158565b61023760055481565b61023760065481565b61023760045481565b61027361026e366004610dc2565b61094c565b6040516101589796959493929190610f50565b6101a1610294366004610fa4565b8051602081830181018051600a8252928201919093012091525460ff1681565b6102736102c2366004610fe1565b610a1d565b6101696102d5366004610dc2565b610a3f565b6102e2610ab8565b6102ea610b18565b565b6102f4610ab8565b6001600160a01b0381166103475760405162461bcd60e51b8152602060048201526015602482015274043616e206e6f74207365742061646472657373203605c1b60448201526064015b60405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b610371610ab8565b6001600160a01b0381166103bf5760405162461bcd60e51b8152602060048201526015602482015274043616e206e6f74207365742061646472657373203605c1b604482015260640161033e565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6103e9610ab8565b6102ea6000610b6a565b6103fb610bc3565b60008111801561040b5750600481105b6104485760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b21037b83a34b7b760911b604482015260640161033e565b6001600160a01b03821673e7f1725e7734ce288f8367e1bb143e90bb3f0512148061048f57506001600160a01b03821673250b0ae6ec23805508e31714e3578b8b4cbe5a3e145b6104cf5760405162461bcd60e51b815260206004820152601160248201527024b73b30b634b210313abc903a37b5b2b760791b604482015260640161033e565b600083511161050f5760405162461bcd60e51b815260206004820152600c60248201526b496e76616c6964206e616d6560a01b604482015260640161033e565b3360009081526007602052604090205460ff161561056f5760405162461bcd60e51b815260206004820152601760248201527f4164647265737320616c7265616479206861732044414f000000000000000000604482015260640161033e565b600a8360405161057f9190610ffa565b9081526040519081900360200190205460ff16156105d45760405162461bcd60e51b815260206004820152601260248201527113985b5948185b1c9958591e48195e1a5cdd60721b604482015260640161033e565b6000816001036105e357506003545b816002036105f057506004545b816003036105fd57506005545b610608338483610c09565b604051630cca2f4960e21b815233600482015260248101829052735fbdb2315678afecb367f032d93f642f64180aa390633328bd2490604401600060405180830381600087803b15801561065b57600080fd5b505af115801561066f573d6000803e3d6000fd5b505050506106c56040518060e00160405280600081526020016060815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160006001600160a01b031681525090565b336040820152606081018390526020810185905242608082015260a081018290526001600160a01b03841660c08201526006805490600061070583611016565b909155505060065481523360009081526008602090815260409091208251815590820151829190600182019061073b90826110c6565b506040828101516002830180546001600160a01b03199081166001600160a01b0393841617909155606085015160038501556080850151600485015560a0850151600585015560c090940151600690930180549094169216919091179091558151600090815260096020908152919020825181559082015182919060018201906107c590826110c6565b506040828101516002830180546001600160a01b03199081166001600160a01b0393841617909155606085015160038501556080850151600485015560a0850151600585015560c090940151600690930180549094169216919091179091553360009081526007602052819020805460ff191660019081179091559051600a90610850908890610ffa565b908152604051908190036020018120805492151560ff199093169290921790915581517fa31da5bc5ab26bcd803801229e6f71ef382a247f7fafb69420b9035335486e9f916108aa91339187908a9088908b904290611186565b60405180910390a15050505050565b6108c1610ab8565b6102ea610d20565b6108d1610ab8565b6000821180156108e15750600482105b61091e5760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b21037b83a34b7b760911b604482015260640161033e565b8160010361092c5760038190555b8160020361093a5760048190555b816003036109485760058190555b5050565b6008602052600090815260409020805460018201805491929161096e9061103d565b80601f016020809104026020016040519081016040528092919081815260200182805461099a9061103d565b80156109e75780601f106109bc576101008083540402835291602001916109e7565b820191906000526020600020905b8154815290600101906020018083116109ca57829003601f168201915b505050600284015460038501546004860154600587015460069097015495966001600160a01b0393841696929550909350911687565b6009602052600090815260409020805460018201805491929161096e9061103d565b610a47610ab8565b6001600160a01b038116610aac5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161033e565b610ab581610b6a565b50565b6000546001600160a01b036101009091041633146102ea5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161033e565b610b20610d5d565b6000805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b60005460ff16156102ea5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161033e565b6001546040516323b872dd60e01b81526001600160a01b038581166004830152918216602482015260448101839052908316906323b872dd906064016020604051808303816000875af1158015610c64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8891906111d2565b506002546040516323b872dd60e01b81526001600160a01b039182166004820152908416602482015260448101829052735fbdb2315678afecb367f032d93f642f64180aa3906323b872dd906064016020604051808303816000875af1158015610cf6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1a91906111d2565b50505050565b610d28610bc3565b6000805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610b4d3390565b60005460ff166102ea5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161033e565b80356001600160a01b0381168114610dbd57600080fd5b919050565b600060208284031215610dd457600080fd5b610ddd82610da6565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610e0b57600080fd5b813567ffffffffffffffff80821115610e2657610e26610de4565b604051601f8301601f19908116603f01168101908282118183101715610e4e57610e4e610de4565b81604052838152866020858801011115610e6757600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215610e9c57600080fd5b833567ffffffffffffffff811115610eb357600080fd5b610ebf86828701610dfa565b935050610ece60208501610da6565b9150604084013590509250925092565b60008060408385031215610ef157600080fd5b50508035926020909101359150565b60005b83811015610f1b578181015183820152602001610f03565b50506000910152565b60008151808452610f3c816020860160208601610f00565b601f01601f19169290920160200192915050565b87815260e060208201526000610f6960e0830189610f24565b6001600160a01b039788166040840152606083019690965250608081019390935260a083019190915290921660c09092019190915292915050565b600060208284031215610fb657600080fd5b813567ffffffffffffffff811115610fcd57600080fd5b610fd984828501610dfa565b949350505050565b600060208284031215610ff357600080fd5b5035919050565b6000825161100c818460208701610f00565b9190910192915050565b60006001820161103657634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c9082168061105157607f821691505b60208210810361107157634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156110c157600081815260208120601f850160051c8101602086101561109e5750805b601f850160051c820191505b818110156110bd578281556001016110aa565b5050505b505050565b815167ffffffffffffffff8111156110e0576110e0610de4565b6110f4816110ee845461103d565b84611077565b602080601f83116001811461112957600084156111115750858301515b600019600386901b1c1916600185901b1785556110bd565b600085815260208120601f198616915b8281101561115857888601518255948401946001909101908401611139565b50858210156111765787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060018060a01b03808a16835288602084015287604084015260e060608401526111b460e0840188610f24565b60808401969096529390931660a082015260c0015250949350505050565b6000602082840312156111e457600080fd5b81518015158114610ddd57600080fdfea264697066735822122057f4eb6e8619c230ae562190a854177d5500c56f118602b3fd7cc90e810b2fa964736f6c63430008120033",
  "devdoc": {
    "events": {
      "Paused(address)": {
        "details": "Emitted when the pause is triggered by `account`."
      },
      "Unpaused(address)": {
        "details": "Emitted when the pause is lifted by `account`."
      }
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 469,
        "contract": "contracts/AIHomesDAO.sol:AIHomesDAO",
        "label": "_paused",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 348,
        "contract": "contracts/AIHomesDAO.sol:AIHomesDAO",
        "label": "_owner",
        "offset": 1,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 697,
        "contract": "contracts/AIHomesDAO.sol:AIHomesDAO",
        "label": "receiveUSDAddress",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 699,
        "contract": "contracts/AIHomesDAO.sol:AIHomesDAO",
        "label": "sendHomesTokenAddress",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 702,
        "contract": "contracts/AIHomesDAO.sol:AIHomesDAO",
        "label": "option1",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 705,
        "contract": "contracts/AIHomesDAO.sol:AIHomesDAO",
        "label": "option2",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 708,
        "contract": "contracts/AIHomesDAO.sol:AIHomesDAO",
        "label": "option3",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 711,
        "contract": "contracts/AIHomesDAO.sol:AIHomesDAO",
        "label": "profilesLength",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 715,
        "contract": "contracts/AIHomesDAO.sol:AIHomesDAO",
        "label": "isOwnDao",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 720,
        "contract": "contracts/AIHomesDAO.sol:AIHomesDAO",
        "label": "profiles",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_struct(DA0Info)686_storage)"
      },
      {
        "astId": 725,
        "contract": "contracts/AIHomesDAO.sol:AIHomesDAO",
        "label": "profilesById",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_uint256,t_struct(DA0Info)686_storage)"
      },
      {
        "astId": 729,
        "contract": "contracts/AIHomesDAO.sol:AIHomesDAO",
        "label": "isExistName",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_string_memory_ptr,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_struct(DA0Info)686_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct AIHomesDAO.DA0Info)",
        "numberOfBytes": "32",
        "value": "t_struct(DA0Info)686_storage"
      },
      "t_mapping(t_string_memory_ptr,t_bool)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_struct(DA0Info)686_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct AIHomesDAO.DA0Info)",
        "numberOfBytes": "32",
        "value": "t_struct(DA0Info)686_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(DA0Info)686_storage": {
        "encoding": "inplace",
        "label": "struct AIHomesDAO.DA0Info",
        "members": [
          {
            "astId": 673,
            "contract": "contracts/AIHomesDAO.sol:AIHomesDAO",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 675,
            "contract": "contracts/AIHomesDAO.sol:AIHomesDAO",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 677,
            "contract": "contracts/AIHomesDAO.sol:AIHomesDAO",
            "label": "owner",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 679,
            "contract": "contracts/AIHomesDAO.sol:AIHomesDAO",
            "label": "option",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 681,
            "contract": "contracts/AIHomesDAO.sol:AIHomesDAO",
            "label": "createdAt",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 683,
            "contract": "contracts/AIHomesDAO.sol:AIHomesDAO",
            "label": "amount",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 685,
            "contract": "contracts/AIHomesDAO.sol:AIHomesDAO",
            "label": "buyToken",
            "offset": 0,
            "slot": "6",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}